// this file is used for development and may not make sense or even compile

fun foo(x int) auto


/* C
typedef struct cslice { const void* p; uint len; } cslice;
void main(i64 x) {
  cslice v = {NULL,0};
  const i8 tmp[3] = {1,2,3};
  v = (cslice){tmp,3};
}
*/

// // unsafe fun to_rawptr<T>(_ &T) rawptr

// fun bytes() rawptr
//   hello = "Hello world\n"
//   var p = unsafe to_rawptr(hello)
//   p

// fun ints() rawptr
//   v = [1,2,3]
//   var p = unsafe to_rawptr(v)
//   p

// fun main(x int) rawptr
//   x



// // fun a(x &[u8]) rawptr
// //   var p = unsafe to_rawptr(x)
// //   p

// fun b(x &u32) rawptr
//   var p = unsafe to_rawptr(x)
//   p

// fun main() int
//   0

// fun write(fd i32, ptr rawptr, size uint) i32

// fun main() int
//   message = "Hello world\n"
//   ptr = unsafe to_rawptr(message)
//   write(1, ptr, 12)
//   0


// fun write(fd i32, ptr uint, size uint) i32

// fun foo(s &[u8]) int
//   1

// fun main(x, y int) int
//   hello = "hello world"
//   hello = "world"
//   write(1, size=5, ptr=hello)
//   y = foo(hello)
//   y = y * 2
//   x * y
