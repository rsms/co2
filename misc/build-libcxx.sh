#!/bin/bash
set -e
cd "$(dirname "$0")/.."
. misc/_common.sh

builddir="$WORK_BUILD_DIR"/libcxx-tmp
# rm -rf "$builddir"
mkdir -p "$builddir"

# create Makefile from template misc/libcxx.make
echo "# generated by $(basename "$0"), $(date)" > "$builddir"/Makefile
sed -E 's:@PROJECT@:'"$PROJECT"':g' "$PROJECT"/misc/libcxx.make >> "$builddir"/Makefile

LIBCXX_OBJS=
LIBCXXABI_OBJS=

cd "$PROJECT"/lib/libcxx/src
for f in $(find . -type f -name '*.cpp'); do
	f=${f:2}  # ./foo/bar.cpp -> foo/bar.cpp
	objf=${f:0:$(( ${#f} - 4 ))}.o  # foo/bar.cpp -> foo/bar.o
	LIBCXX_OBJS="$LIBCXX_OBJS $objf"
	if [[ "$f" == *"/"* ]]; then
		cat << EOF >> "$builddir"/Makefile
libcxx/$objf: \$(PROJECT)/lib/libcxx/src/$f
	@mkdir -p \$(dir \$@)
	\$(CXXC) \$(CFLAGS) \$(CFLAGS_LIBCPP) -c -o \$@ \$<
EOF
	fi
done

cd "$PROJECT"/lib/libcxxabi/src
for f in $(find . -type f -name '*.cpp'); do
	f=${f:2}  # ./foo/bar.cpp -> foo/bar.cpp
	objf=${f:0:$(( ${#f} - 4 ))}.o  # foo/bar.cpp -> foo/bar.o
	LIBCXXABI_OBJS="$LIBCXXABI_OBJS $objf"
	if [[ "$f" == *"/"* ]]; then
		cat << EOF >> "$builddir"/Makefile
libcxxabi/$objf: \$(PROJECT)/lib/libcxxabi/src/$f
	@mkdir -p \$(dir \$@)
	\$(CXXC) \$(CFLAGS) \$(CFLAGS_LIBCPPABI) -c -o \$@ \$<
EOF
	fi
done

cd "$builddir"
sed -i '' -E 's:@LIBCXX_OBJS@:'"$LIBCXX_OBJS"':g' Makefile
sed -i '' -E 's:@LIBCXXABI_OBJS@:'"$LIBCXXABI_OBJS"':g' Makefile
if ! make -j$(nproc); then
	status=$?
	echo "Make failed (exit status $status)" >&2
	exit $status
fi

# cleanup
cd "$PROJECT"
rm -rf "$builddir"

echo "libc++ archives created:"
ls -lh work/build/libc++*.a
